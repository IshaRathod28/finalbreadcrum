import axios from 'axios';
import React, { useState, useEffect } from 'react'

function Recursion({ item }) {
    const [childData, setChildData] = useState([]);
    const [editedvalue, setEditedvalue] = useState("");
    const [btn, setBtn] = useState(false);
    useEffect(() => {
        console.log(item);
        getChild();
    }, [])

console.log(item.recid)

    const getChild = async () => {
        try {
            const data = await axios.get("http://localhost:8000/getchild", { params: { id: item.recid } })
            setChildData(data.data);
        } catch (err) {
            console.log(err);
        }
    }

    const editBtnClick = () => {
        console.log("update  clicked")
        setBtn(!btn);
    }

    const deleteData = (id) => {
        console.log(id);
        try {
            axios.get("http://localhost:8000/deleteDatas", { params: { id } });
        } catch (error) {
            console.log(error);
        }
    };

    const editCategory = async (id) => {
        try {
            console.log(id);
            const res = await axios.get("http://localhost:8000/editDatas", { params: { id, editedvalue } })
            console.log(res);
            // console.log(edit);

        } catch (error) {
            console.log(error);
        }
    };

    return (
        <div style={{ "marginLeft": "50px" , display:"flex"}}>
        <span>
            <p  onClick={editBtnClick}>  &#9998; {item.category}</p>
            </span> 
            <span>
            {btn ? <>
                <input
                    type="text"
                    value={editedvalue}
                    placeholder="Edit data"
                    onChange={(e) => {
                        setEditedvalue(e.target.value);
                    }}

                />
                <button onClick={() => {
                    editCategory(item.recid)
                }}>Update</button>

            </> : <>

            </>}
            <button onClick={() => deleteData(item.recid)} style={{marginTop:"18px", marginLeft:"10px" }}> &#xf014; delete</button>
             {childData.map((item1) => (
                <Recursion item={item1} />
            ))}
            </span>
        </div>
    )
}

export default Recursion 















import axios from 'axios';
import React, { useEffect, useState } from 'react';
import Recursion from './Recursion';
//import { useNavigate, link } from 'react-router-dom';
//import Navbar from './Navbar';


const Category= () => {
  const [category, setCategory] = useState([]);
  const [mycategory, setMycategory] = useState(null);
  const [incategory, setIncategory] = useState("");
  const[categorytype,setCategorytype] = useState('');
  const[parentid, setParentid] = useState([]);
console.log(parentid)
  useEffect(() => {
    categoryadd();
  }, [])
 
  const categoryadd = async () => {
    try {
      const res = await axios.get("http://localhost:8000")
      console.log("category data", res.data);
      setCategory(res.data);
      console.log("category",res.data);
    }
    catch (err) {
      console.log(err);
    }
  }

  const handlesubmit = async (e)=>{
    // e.preventDefault();
  
      if (incategory == "") {
          alert("enter category name");
      }
      
      else if(categorytype == 'child'){
        if  (mycategory=="" || mycategory==null) {
          alert("select category");
      }
      }

      
      else {
        console.log("mycategory : ",mycategory)
      const res =await axios.post("http://localhost:8000/category",{
        incategory : incategory,
        id : mycategory
      }
      )}
    // try{
    // console.log("mycategory : ",mycategory)
    //   const res =await axios.post("http://localhost:8000/category",{
    //     incategory : incategory,
    //     id : mycategory
    //   }
    //   )
    // }
    // catch(err){
    //     console.log(err);
    // }
  }

  const show_category = async() => {
      try{
        const res = await axios.get("http://localhost:8000/getparent")
        console.log(res.data);
        setParentid(res.data);
      }
      catch(err){
        console.log(err);
      }
  }
  
  return (
    <>
    <div align="centre">
      <form >
        <table>
          <tr>
            <td>Category Type</td>
            <td>
              <input type="radio" name='category' value='Parent' id='Parent' onChange={() => {setCategorytype('Parent') }} />
              <label htmlFor="Parent">Parent</label>

              <input type="radio" name='category' value='Child' id='Child' onChange={() => {setCategorytype('Child')}}/><label htmlFor="Child">Child</label>
            </td>
          </tr>

          <tr>
            <td>Category Name</td>
            <td> <input type='text' name='category_name' value={incategory}
              onChange={(e) => { setIncategory(e.target.value) }} /> </td>
          </tr>

          {categorytype == 'Child' &&
          <tr>
            <td>Category</td>
            <td><select name="category" value={mycategory}
              onChange={(e) => {
                setMycategory(e.target.value);
              }} >
              {category.map((item, index) => (
                <option
                  value={item.recid} >
                  {item.category}

                  
                </option>
              ))}
             </select></td>
          </tr> 
         
          }
  <tr>
            <td><input type="submit" value='ADD' onClick={handlesubmit}/> </td>
          </tr>
          <tr>
            <td>
              <input type="button" onClick={show_category} value="show Category"/>
            </td>
          </tr>
        </table>


        {parentid.map((item)=>(
          <Recursion item={item}  />
        )) }
        


      </form>
      </div>
    </>
  )
}

export default Category


















const express = require('express');
const app = express();

const cors = require('cors');
app.use(cors());
app.use(express.json());
const mysql = require('mysql');


var con = mysql.createConnection({
  host: '192.168.2.8',
  user: 'trainee',
  password: 'trainee@123',
  database: 'trainee'
});

con.connect(function (err) {
  if (err) console.log(err)
  else
    console.log("Database Connected")
});


app.get("/", async (req, res) => {
  try {
    const sql = `select * from isha_category`
    con.query(sql, (err, result) => {
      if (err) {
        throw err;
      }
      else {
        res.json(result);
        console.log(result);
      }
    })
  } catch (err) {
    res.status(400).send(err);
  }
})


app.post("/category", async (req, res) => {
  const name = req.body.incategory;
  const parent_id = req.body.id;

  const sql = `insert into isha_category(category,parent_id) values("${name}","${parent_id}")`

  con.query(sql, function (err, result) {
    if (err) throw err;
    console.log(result);
    console.log("inserted");
  });
})


app.get("/getparent", async (req, res) => {
  try {
    const sql = `select * from isha_category where parent_id=0`
    con.query(sql, (err, result) => {
      if (err) {
        throw err;
      }
      else {
        res.json(result);
        console.log(result);
      }
    })
  } catch (err) {
    res.status(400).send(err);
  }
})
app.get("/getchild", async (req, res) => {
  try {
    const id = req.query.id;
    console.log(req.query)
    const sql = `select * from isha_category where parent_id=${id}`
    con.query(sql, (err, result) => {
      if (err) {
        throw err;
      }
      else {
        res.json(result);
        console.log(result);
      }
    })
  } catch (err) {
    res.status(400).send(err);
  }
})



app.get("/deleteDatas", (req, res) => {
  try {
    console.log("in delete")
    console.log(req.query.id);
    let Query = `delete from isha_category where recid="${req.query.id}"`
    con.query(Query, (err, result) => {
      if (err) throw err;
      else {
        con.query(
          `delete from isha_category where parent_id="${req.query.id}"`,
          (err, result) => {
            if (err) throw err;
            console.log(result);
          }
        );
      }
    });
  } catch (error) {
    console.log(error);
  }
});

app.get("/editDatas", async(req, res) => {
  try {
    console.log(req.query) 
    const id = req.query.id;
    const value = req.query.editedvalue;
    con.query(
      `update isha_category set category= "${value}" where recid="${id}"`,
      (err, result) => {
        if (err) throw err;
        
      }
    );
  } catch (error) {
    console.log(error);
  }
});
app.listen(8000, () => {
  console.log("app is listening on port 8000");
})
